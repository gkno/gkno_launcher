#!/bin/bash

PYTHON=python
if [[ $PYTHON_GKNO != '' ]]
then
  PYTHON=$PYTHON_GKNO
fi

# Find the gkno directory.
gkno_directory="`dirname \"$0\"`"
gkno_directory="`( cd \"$gkno_directory\" && pwd )`"

# Store the current working directory.
current_directory=$(pwd)

# Get the most recent commit (ensure that we are in the gkno
# directory before executing git log).
cd $gkno_directory
COMMITID=$(git log | head -n 1 | awk '{print $2}')
cd $current_directory
export GKNOCOMMITID=$COMMITID

# -------------------------------------------------------
# NOTE: Update any submodules that contain python 
# library code in the block below, *before* executing 
# the main gkno script.
# -------------------------------------------------------

# Define the path to the configurationClass directory.
configuration_class_directory=$gkno_directory/src/configurationClass
 
# configurationClass directory will be empty on first run.
# If so, we need to fetch its source code before running main gkno.
cd $gkno_directory
git submodule update --quiet --init src/configurationClass
cd $current_directory

# Add configurationClass module(s) to python's module search path.
PYTHONPATH=$PYTHONPATH:$configuration_class_directory:$configuration_class_directory/networkx 

# --------------------------------------------------------

# Run main gkno script.
command_line="$PYTHON $gkno_directory/src/version2.py"
for ARG in "$@"
do
  command_line="$command_line $ARG"
done

export PYTHONPATH
$command_line
