{
  "id" : "bwa-mem",
  "description" : "Pairwise alignment of next-generation sequencing reads against a reference genome.",
  "categories" : ["Aligners", "BWA"],
  "tools" : ["bwa"],
  "path" : "bwa",
  "executable" : "bwa",
  "modifier" : "mem",
  "arguments" : {
    "Inputs" : [
      {
        "description" : "The first mate FASTQ file.",
        "long form argument" : "--fastq",
        "short form argument" : "-q",
        "command line argument" : "none",
        "modify argument" : "omit",
        "required" : true,
        "data type" : "string",
        "extensions" : ["fq", "fq.gz", "fastq", "fastq.gz"]
      },
      {
        "description" : "The second mate FASTQ file.",
        "long form argument" : "--fastq2",
        "short form argument" : "-q2",
        "command line argument" : "none",
        "modify argument" : "omit",
        "data type" : "string",
        "extensions" : ["fq", "fq.gz", "fastq", "fastq.gz"]
      },
      {
        "description" : "FM-index files (prefix).",
        "long form argument" : "--reference-prefix",
        "short form argument" : "-x",
        "command line argument" : "none",
        "modify argument" : "omit",
        "required" : true,
        "data type" : "string",
        "is filename stub" : true,
        "stub extensions" : [
          "amb",
          "ann",
          "bwt",
          "pac",
          "sa"
        ]
      }
    ],

    "Outputs" : [
      {
        "description" : "The output alignment file",
        "long form argument" : "--out",
        "short form argument" : "-o",
        "command line argument" : "none",
        "output to stdout" : true,
        "required" : true,
        "data type" : "string",
        "extensions" : ["sam"],
        "construct filename" : {
          "method": "from tool argument",
          "use argument" : "--fastq",
          "modify extension" : "replace"
        },
        "if output to stream" : {
          "argument" : "omit",
          "value" : "omit"
        }
      }
    ],

    "Algorithmic options" : [
      {
        "description" : "Number of threads [1].",
        "long form argument" : "--threads",
        "short form argument" : "-t",
        "command line argument" : "-t",
        "data type" : "integer"
      },    
      {
        "description" : "Minimum seed length [19].",
        "long form argument" : "--seed-length",
        "short form argument" : "-k",
        "command line argument" : "-k",
        "data type" : "integer"
      },    
      {
        "description" : "Band width for banded alignment [100].",
        "long form argument" : "--bandwidth",
        "short form argument" : "-w",
        "command line argument" : "-w",
        "data type" : "integer"
      },
      {
        "description" : "Off-diagonal X-dropoff [100].",
        "long form argument" : "--x-dropoff",
        "short form argument" : "-d",
        "command line argument" : "-d",
        "data type" : "integer"
      },
      {
        "description" : "Look for internal seeds inside a seed longer than {-k} * FLOAT [1.5].",
        "long form argument" : "--internal-seed",
        "short form argument" : "-r",
        "command line argument" : "-r",
        "data type" : "float"
      },
      {
        "description" : "Skip seeds with more than INT occurrences [500].",
        "long form argument" : "--skip-seeds",
        "short form argument" : "-c",
        "command line argument" : "-c",
        "data type" : "integer"
      },
      {
        "description" : "Drop chains shorter than FLOAT fraction of the longest overlapping chain [0.50].",
        "long form argument" : "--drop-chains",
        "short form argument" : "-D",
        "command line argument" : "-D",
        "data type" : "float"
      },
      {
        "description" : "Discard a chain if seeded bases shorter than INT [0].",
        "long form argument" : "--discard-chains",
        "short form argument" : "-W",
        "command line argument" : "-W",
        "data type" : "integer"
      },
      {
        "description" : "Perform at most INT rounds of mate rescues for each read [50].",
        "long form argument" : "--max-mate-rescues",
        "short form argument" : "-m",
        "command line argument" : "-m",
        "data type" : "integer"
      },
      {
        "description" : "Skip mate rescue.",
        "long form argument" : "--skip-mate-rescue",
        "short form argument" : "-S",
        "command line argument" : "-S",
        "data type" : "flag"
      },
      {
        "description" : "Skip pairing; mate rescue performed unless -S also in use.",
        "long form argument" : "--skip-pairing",
        "short form argument" : "-P",
        "command line argument" : "-P",
        "data type" : "flag"
      },
      {
        "description" : "Discard full-length exact matches.",
        "long form argument" : "--discard-exact-matches",
        "short form argument" : "-e",
        "command line argument" : "-e",
        "data type" : "flag"
      },
      {
        "description" : "Score for a sequence match, which scales options -TdBOELU unless overridden [1].",
        "long form argument" : "--match-score",
        "short form argument" : "-A",
        "command line argument" : "-A",
        "data type" : "integer"
      },
      {
        "description" : "Penalty for a mismatch [4].",
        "long form argument" : "--mismatch-penalty",
        "short form argument" : "-B",
        "command line argument" : "-B",
        "data type" : "integer"
      },
      {
        "description" : "Gap open penalties for deletions and insertions [6,6].",
        "long form argument" : "--gap-open-penalty",
        "short form argument" : "-O",
        "command line argument" : "-O",
        "data type" : "string"
      },
      {
        "description" : "Gap extension penalty; a gap of size k cost '{-O} + {-E}*k' [1,1].",
        "long form argument" : "--gap-extend-penalty",
        "short form argument" : "-E",
        "command line argument" : "-E",
        "data type" : "string"
      },
      {
        "description" : "Penalty for 5'- and 3'-end clipping [5,5].",
        "long form argument" : "--clipping-penalty",
        "short form argument" : "-L",
        "command line argument" : "-L",
        "data type" : "string"
      },
      {
        "description" : "Penalty for an unpaired read pair [17].",
        "long form argument" : "--unpaired-penalty",
        "short form argument" : "-U",
        "command line argument" : "-U",
        "data type" : "integer"
      },
      {
        "description" : "Read type. Setting -x changes multiple parameters unless overriden [null]. (pacbio: -k17 -W40 -r10 -A2 -B5 -O2 -E1 -L0; pbread: -k13 -W40 -c1000 -r10 -A2 -B5 -O2 -E1 -N25 -FeaD.001.",
        "long form argument" : "--read-type",
        "short form argument" : "-x",
        "command line argument" : "-x",
        "data type" : "string"
      }
    ],

    "Input/output options" : [
      {
        "description" : "Read group header line such as '@RG\tid:foo\tSM:bar' [null].",
        "long form argument" : "--read-group-header",
        "short form argument" : "-R",
        "command line argument" : "-R",
        "data type" : "string"
      },
      {
        "description" : "Verbose level: 1=error, 2=warning, 3=message, 4+=debugging [3].",
        "long form argument" : "--verbosity",
        "short form argument" : "-v",
        "command line argument" : "-v",
        "data type" : "integer"
      },
      {
        "description" : "Minimum score to output [30].",
        "long form argument" : "--minimum-score",
        "short form argument" : "-T",
        "command line argument" : "-T",
        "data type" : "integer"
      },
      {
        "description" : "If there are <INT hits with score >80% of the max score, output all in XA [5].",
        "long form argument" : "--output-xa",
        "short form argument" : "-xa",
        "command line argument" : "-h",
        "data type" : "integer"
      },
      {
        "description" : "Output all alignments for SE or unpaired PE.",
        "long form argument" : "--output-all-alignments",
        "short form argument" : "-a",
        "command line argument" : "-a",
        "data type" : "flag"
      },
      {
        "description" : "Append FASTA/FASTQ comment to SAM output.",
        "long form argument" : "--append-comment",
        "short form argument" : "-C",
        "command line argument" : "-C",
        "data type" : "flag"
      },
      {
        "description" : "Use soft clipping for supplementary alignments.",
        "long form argument" : "--use-soft-clipping",
        "short form argument" : "-Y",
        "command line argument" : "-Y",
        "data type" : "flag"
      },
      {
        "description" : "Mark shorter split hits as secondary.",
        "long form argument" : "--mark-splits",
        "short form argument" : "-M",
        "command line argument" : "-M",
        "data type" : "flag"
      },
      {
        "description" : "Specify the mean, standard deviation (10% of the mean if absent), max (4 sigma from the mean if absent) and min of the insert size distribution. FR orientation only [inferred].",
        "long form argument" : "--insert-size-distribution",
        "short form argument" : "-I",
        "command line argument" : "-I",
        "data type" : "string"
      }
    ]
  },

  "argument order" : [
    "--threads",
    "--seed-length",
    "--bandwidth",
    "--x-dropoff",
    "--internal-seed",
    "--skip-seeds",
    "--drop-chains",
    "--discard-chains",
    "--max-mate-rescues",
    "--skip-mate-rescue",
    "--skip-pairing",
    "--discard-exact-matches",
    "--match-score",
    "--mismatch-penalty",
    "--gap-open-penalty",
    "--gap-extend-penalty",
    "--clipping-penalty",
    "--unpaired-penalty",
    "--read-type",
    "--read-group-header",
    "--verbosity",
    "--minimum-score",
    "--output-xa",
    "--output-all-alignments",
    "--append-comment",
    "--use-soft-clipping",
    "--mark-splits",
    "--insert-size-distribution",
    "--reference-prefix",
    "--fastq",
    "--fastq2",
    "--sam"
  ],

  "parameter sets" : [
    {
      "id" : "default",
      "description" : "Default parameter set requires the users input for all files.",
      "data" : [
      ]
    },

    {
      "id" : "test",
      "description" : "Parameter set for use with the test-harness.",
      "data" : [
        {
          "id" : "fastq",
          "argument" : "--fastq",
          "values" : ["$(RESOURCES)/tutorial/current/mutated_genome_1.fq"]
        },
        {
          "id" : "fastq2",
          "argument" : "--fastq2",
          "values" : ["$(RESOURCES)/tutorial/current/mutated_genome_2.fq"]
        },
        {
          "id" : "index",
          "argument" : "--index",
          "values" : ["$(RESOURCES)/tutorial/current/chr20_fragment"]
        }
      ]
    }
  ]
}
