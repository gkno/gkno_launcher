{
  "id" : "mosaik-aligner-special",
  "configuration type" : "tool",
  "description" : "Perform pairwise alignment of a read archive with additional 'special' reference sequences included. These special sequences must all have a common prefix and alignment to them will be shown in the ZA tags. No primary alignments to the 'special' sequences will occur.",
  "categories" : ["Aligners", "Mosaik", "Marthlab-software"],
  "tools" : ["mosaik"],
  "path" : "MOSAIK/bin",
  "executable" : "MosaikAligner",
  "arguments" : {
    "Inputs" : [
      {
        "description" : "The input read file",
        "long form argument" : "--in",
        "short form argument" : "-i",
        "command line argument" : "-in",
        "required" : true,
        "data type" : "string",
        "extensions" : ["mkb"]
      },
      {
        "description" : "The input reference file (Mosaik native dat file)",
        "long form argument" : "--mosaik-reference",
        "short form argument" : "-m",
        "command line argument" : "-ia",
        "required" : true,
        "data type" : "string",
        "extensions" : ["dat"]
      },
      {
        "description" : "The Mosaik jump database",
        "long form argument" : "--jump-database",
        "short form argument" : "-j",
        "command line argument" : "-j",
        "required" : true,
        "data type" : "string",
        "is filename stub" : true,
        "include dot in stub extension" : false,
        "stub extensions" : [
          "_keys.jmp",
          "_meta.jmp",
          "_positions.jmp"
        ]
      },
      {
        "description" : "Neural network file for single end read mapping qualities",
        "long form argument" : "--ann-single-end",
        "short form argument" : "-as",
        "command line argument" : "-annse",
        "required" : true,
        "data type" : "string",
        "extensions" : ["ann"]
      },
      {
        "description" : "Neural network file for paired end read mapping qualities",
        "long form argument" : "--ann-paired-end",
        "short form argument" : "-ap",
        "command line argument" : "-annpe",
        "required" : true,
        "data type" : "string",
        "extensions" : ["ann"]
      }
    ],

    "Outputs" : [
      {
        "description" : "The output alignment file",
        "long form argument" : "--out",
        "short form argument" : "-o",
        "command line argument" : "-out",
        "required" : true,
        "data type" : "string",
        "is filename stub" : true,
        "stub extensions" : [
          "bam",
          "special.bam"
        ],
        "construct filename" : {
          "method": "from tool argument",
          "use argument" : "--in",
          "modify extension" : "replace"
        }
      }
    ],

    "Essential parameters" : [
      {
        "description" : "Alignment algorithm: [fast, single, multi, all]. def: all",
        "long form argument" : "--alignment-algorithm",
        "short form argument" : "-aa",
        "command line argument" : "-a",
        "data type" : "flag"
      },    
      {
        "description" : "Alignment mode: [unique, all]. def: all",
        "long form argument" : "--alignment-mode",
        "short form argument" : "-am",
        "command line argument" : "-m",
        "data type" : "string"
      },    
      {
        "description" : "Hash size [4 - 32].",
        "long form argument" : "--hash-size",
        "short form argument" : "-hs",
        "command line argument" : "-hs",
        "data type" : "integer"
      }
    ],

    "Filtering parameters" : [
      {
        "description" : "The percentage of mismatches allowed [0.0 - 1.0]",
        "long form argument" : "--mismatch-percentage",
        "short form argument" : "-mmp",
        "command line argument" : "-mmp",
        "data type" : "float"
      },    
      {
        "description" : "The alignment candidate threshold (length)",
        "long form argument" : "--alignment-candidate-threshold",
        "short form argument" : "-act",
        "command line argument" : "-act",
        "data type" : "integer"
      },
      {
        "description" : "The maximum number of positions stored per seed",
        "long form argument" : "--maximum-hashes-per-seed",
        "short form argument" : "-mhp",
        "command line argument" : "-mhp",
        "data type" : "integer"
      }    
    ],

    "Performance parameters" : [
      {
        "description" : "Specifies the Smith-Waterman bandwidth.  Default: 9",
        "long form argument" : "--bandwidth",
        "short form argument" : "-bw",
        "command line argument" : "-bw",
        "data type" : "integer"
      },    
      {
        "description" : "Uses the specified number of threads.",
        "long form argument" : "--threads",
        "short form argument" : "-t",
        "command line argument" : "-p",
        "data type" : "integer"
      }
    ],

    "Jump database parameters" : [
      {
        "description" : "Specifies the prefixes of 'special' reference sequences.",
        "long form argument" : "--special-reference-prefix",
        "short form argument" : "-s",
        "command line argument" : "-sref",
        "required" : true,
        "data type" : "string"
      },    
      {
        "description" : "Specifies the maximum number of hashes for the special reference sequences.",
        "long form argument" : "--special-reference-hashes",
        "short form argument" : "-sh",
        "command line argument" : "-srefn",
        "required" : true,
        "data type" : "integer"
      }
    ]
  },

  "parameter sets" : [
    {
      "id" : "default",
      "description" : "Default parameter set requires the users input for all files.",
      "data" : [
      ]
    },

    {
      "id" : "test",
      "description" : "Parameter set for use with the test-harness.",
      "data" : [
        {
          "id" : "reference",
          "argument" : "--mosaik-reference",
          "values" : ["$(RESOURCES)/tutorial/current/chr20_fragment_moblist.dat"]
        },
        {
          "id" : "jump-database",
          "argument" : "--jump-database",
          "values" : ["$(RESOURCES)/tutorial/current/chr20_fragment_moblist_10"]
        },
        {
          "id" : "read archive",
          "argument" : "--in",
          "values" : ["$(RESOURCES)/tutorial/current/mutated_genome.mkb"]
        },
        {
          "id" : "prefix",
          "argument" : "--special-reference-prefix",
          "values" : ["moblist"]
        },
        {
          "id" : "special hashes",
          "argument" : "--special-reference-hashes",
          "values" : [50]
        },
        {
          "id" : "hash-size",
          "argument" : "--hash-size",
          "values" : [10]
        },
        {
          "id" : "single end neural net file.",
          "argument" : "--ann-single-end",
          "values" : ["$(RESOURCES)/tutorial/current/se.100.005.ann"]
        },
        {
          "id" : "paired end neural net file.",
          "argument" : "--ann-paired-end",
          "values" : ["$(RESOURCES)/tutorial/current/pe.100.01.ann"]
        }
      ]
    }
  ]
}
