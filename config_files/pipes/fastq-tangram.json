{
  "description" : "Starting from fasta and fastq files, prepare MOSAIK reference files, align reads and search for mobile element insertions (MEIs).",

  "tasks" : {
    "merge-fasta" : {
      "tool" : "concatenate-files"
    },
    "index-fasta" : {
      "tool" : "samtools-index-fasta"
    },
    "create-sequence-dictionary" : {
      "tool" : "picard-create-sequence-dictionary"
    },
    "build-tangram-reference" : {
      "tool" : "tangram-index"
    },
    "build-reference" : {
      "tool" : "mosaik-build-reference"
    },
    "build-jump-database" : {
      "tool" : "mosaik-jump"
    },
    "generate-mosaik-parameters" : {
      "tool" : "premo"
    },
    "build-read-archive" : {
      "tool" : "mosaik-build-fastq"
    },
    "align" : {
      "tool" : "mosaik-aligner-special"
    },
    "sort-bam" : {
      "tool" : "bamtools-sort"
    },
    "mark-duplicates" : {
      "tool" : "dedup"
    },
    "index-duplicate-marked" : {
      "tool" : "bamtools-index"
    },
    "generate-bam-list" : {
      "tool" : "generate-file-list"
    },
    "scan-bam-files" : {
      "tool" : "tangram-scan"
    },
    "detect-mei" : {
      "tool" : "tangram-detect"
    }
  },

  "nodes" : [
    {
      "ID" : "reference fasta",
      "description" : "The reference fasta file.",
      "long form argument" : "--fasta-reference",
      "short form argument" : "-f",
      "tasks" : {
        "merge-fasta" : "--initial-file",
        "build-tangram-reference" : "--fasta-reference"
      }
    },
    {
      "ID" : "moblist reference fasta",
      "description" : "The mobile element reference fasta file.",
      "long form argument" : "--mobile-element-fasta",
      "short form argument" : "-mob",
      "tasks" : {
        "merge-fasta" : "--file1",
        "build-tangram-reference" : "--special-reference"
      }
    },
    {
      "ID" : "index fasta",
      "description" : "Index the merged reference fasta file.",
      "long form argument" : "--merged-reference-fasta",
      "short form argument" : "-mrf",
      "tasks" : {
        "merge-fasta" : "--out",
        "index-fasta" : "--fasta-reference",
        "create-sequence-dictionary" : "--fasta-reference",
        "build-reference" : "--fasta-reference"
      }
    },
    {
      "ID" : "tangram reference",
      "description" : "The reference file created by Tangram index.",
      "long form argument" : "--tangram-reference",
      "short form argument" : "-tr",
      "tasks" : {
        "build-tangram-reference" : "--tangram-reference",
        "detect-mei" : "--tangram-reference"
      }
    },
    {
      "ID" : "mosaik reference",
      "description" : "The reference file created by Mosaik.",
      "long form argument" : "--mosaik-reference",
      "short form argument" : "-m",
      "tasks" : {
        "build-reference" : "--mosaik-reference",
        "build-jump-database" : "--mosaik-reference",
        "generate-mosaik-parameters" : "--mosaik-reference",
        "align" : "--mosaik-reference"
      }
    },
    {
      "ID" : "hash size",
      "description" : "The hash size for hashing the reference.",
      "long form argument" : "--hash-size",
      "short form argument" : "-hs",
      "required" : true,
      "tasks" : {
        "build-jump-database" : "--hash-size",
        "generate-mosaik-parameters" : "--hash-size",
        "align" : "--hash-size"
      }
    },
    {
      "ID" : "jump database",
      "description" : "The hash size for hashing the reference.",
      "tasks" : {
        "build-jump-database" : "--jump-database",
        "generate-mosaik-parameters" : "--jump-database",
        "align" : "--jump-database"
      }
    },
    {
      "ID" : "temp dir",
      "description" : "Temporary working directory.",
      "long form argument" : "--temp-directory",
      "short form argument" : "-t",
      "tasks" : {
        "generate-mosaik-parameters" : "--temp-directory"
      }
    },
    {
      "ID" : "batch",
      "description" : "Number of pairs to align per batch.",
      "long form argument" : "--reads-per-batch",
      "short form argument" : "-rb",
      "tasks" : {
        "generate-mosaik-parameters" : "--reads-per-batch"
      }
    },
    {
      "ID" : "first mate",
      "description" : "The fastq file for the first mate.",
      "long form argument" : "--fastq",
      "short form argument" : "-q",
      "tasks" : {
        "generate-mosaik-parameters" : "--fastq",
        "build-read-archive" : "--fastq"
      }
    },
    {
      "ID" : "second mate",
      "description" : "The fastq file for the second mate.",
      "long form argument" : "--fastq2",
      "short form argument" : "-q2",
      "tasks" : {
        "generate-mosaik-parameters" : "--fastq2",
        "build-read-archive" : "--fastq2"
      }
    },
    {
      "ID" : "mosaik path",
      "description" : "The path to the Mosaik executables.",
      "long form argument" : "--mosaik-path",
      "short form argument" : "-mp",
      "tasks" : {
        "generate-mosaik-parameters" : "--mosaik-path"
      }
    },
    {
      "ID" : "single neural",
      "description" : "The single end neural net file.",
      "long form argument" : "--ann-single-end",
      "short form argument" : "-as",
      "tasks" : {
        "generate-mosaik-parameters" : "--ann-single-end",
        "align" : "--ann-single-end"
      }
    },
    {
      "ID" : "paired neural",
      "description" : "The paired end neural net file.",
      "long form argument" : "--ann-paired-end",
      "short form argument" : "-ap",
      "tasks" : {
        "generate-mosaik-parameters" : "--ann-paired-end",
        "align" : "--ann-paired-end"
      }
    },
    {
      "ID" : "sequencing technology",
      "description" : "The sequencing technology used to generate the reads.",
      "long form argument" : "--sequencing-technology",
      "short form argument" : "-st",
      "tasks" : {
        "generate-mosaik-parameters" : "--sequencing-technology",
        "build-read-archive" : "--sequencing-technology"
      }
    },
    {
      "ID" : "read archive",
      "description" : "The read archive for Mosaik.",
      "long form argument" : "--read-archive",
      "short form argument" : "-a",
      "tasks" : {
        "build-read-archive" : "--read-archive",
        "align" : "--read-archive"
      },
      "delete files" : true
    },
    {
      "ID" : "fragment length",
      "description" : "The median fragment length.",
      "long form argument" : "--median-fragment-length",
      "short form argument" : "-mfl",
      "tasks" : {
        "build-read-archive" : "--median-fragment-length"
      }
    },
    {
      "ID" : "sample",
      "description" : "The sample ID.",
      "long form argument" : "--sample-name",
      "short form argument" : "-s",
      "tasks" : {
        "build-read-archive" : "--sample-name"
      }
    },
    {
      "ID" : "read group",
      "description" : "The read group ID.",
      "long form argument" : "--read-group-id",
      "short form argument" : "-id",
      "tasks" : {
        "build-read-archive" : "--sample-name"
      }
    },
    {
      "ID" : "alignment candidate threshold",
      "description" : "The alignment candidate threshold for the Mosaik aligner.",
      "long form argument" : "--alignment-candidate-threshold",
      "short form argument" : "-act",
      "tasks" : {
        "align" : "--alignment-candidate-threshold"
      }
    },
    {
      "ID" : "bandwidth",
      "description" : "The bandwidth for the striped Smith-Waterman algorithm in the Mosaik aligner.",
      "long form argument" : "--bandwidth",
      "short form argument" : "-bw",
      "tasks" : {
        "align" : "--alignment-candidate-threshold"
      }
    },
    {
      "ID" : "hash per position",
      "description" : "The maximum number of positions to store per hash.",
      "long form argument" : "--maximum-hashes-per-seed",
      "short form argument" : "-mhp",
      "tasks" : {
        "align" : "--maximum-hashes-per-seed"
      }
    },
    {
      "ID" : "processors",
      "description" : "The number of processors to use.",
      "long form argument" : "--processors",
      "short form argument" : "-p",
      "tasks" : {
        "align" : "--processors",
        "detect-mei" : "--processors"
      }
    },
    {
      "ID" : "moblist prefix",
      "description" : "The prefix for all mobile element reference sequences.",
      "long form argument" : "--special-reference-prefix",
      "short form argument" : "-srp",
      "required" : true,
      "tasks" : {
        "align" : "--special-reference-prefix"
      }
    },
    {
      "ID" : "moblist hashes",
      "description" : "The number of hashes for the mobile element reference sequences.",
      "long form argument" : "--special-reference-hashes",
      "short form argument" : "-sh",
      "required" : true,
      "tasks" : {
        "align" : "--special-reference-hashes"
      }
    },
    {
      "ID" : "sort bam",
      "description" : "The bam file prefix output by Mosaik.",
      "long form argument" : "--bam",
      "short form argument" : "-b",
      "tasks" : {
        "align" : "--bam",
        "sort-bam" : "--in"
      },
      "extensions" : {
        "sort-bam" : {
          "--in" : "bam"
        }
      },
      "delete files" : true
    },
    {
      "ID" : "index sorted",
      "description" : "Index sorted bam.",
      "tasks" : {
        "sort-bam" : "--out",
        "mark-duplicates" : "--in"
      }
    },
    {
      "ID" : "bam list",
      "description" : "Generate a list of bam files.",
      "required" : true,
      "tasks" : {
        "mark-duplicates" : "--out",
        "index-duplicate-marked" : "--in"
      },
      "greedy tasks" : {
        "generate-bam-list" : "--in"
      }
    },
    {
      "ID" : "scan",
      "description" : "The number of hashes for the mobile element reference sequences.",
      "long form argument" : "--bam-list",
      "short form argument" : "-bl",
      "required" : true,
      "tasks" : {
        "generate-bam-list" : "--out",
        "scan-bam-files" : "--in-list",
        "detect-mei" : "--in-list"
      }
    },
    {
      "ID" : "tangram directory",
      "description" : "The output directory for Tangram files.",
      "long form argument" : "--tangram-directory",
      "short form argument" : "-td",
      "required" : true,
      "tasks" : {
        "scan-bam-files" : "--output-directory"
      }
    },
    {
      "ID" : "fragments",
      "description" : "The minimum number of normal fragments in a library.",
      "long form argument" : "--minimum-fragments",
      "short form argument" : "-mfr",
      "tasks" : {
        "scan-bam-files" : "--minimum-fragments"
      }
    },
    {
      "ID" : "library file",
      "description" : "Library information file (generated by tangram-scan).",
      "long form argument" : "--library-file",
      "short form argument" : "-l",
      "tasks" : {
        "scan-bam-files" : "--library-file",
        "detect-mei" : "--library-file"
      }
    },
    {
      "ID" : "histogram file",
      "description" : "Fragment length distribution information file (generated by tangram-scan).",
      "long form argument" : "--histogram-file",
      "short form argument" : "-ht",
      "tasks" : {
        "scan-bam-files" : "--histogram-file",
        "detect-mei" : "--histogram-file"
      }
    },
    {
      "ID" : "region",
      "description" : "Genomic region.",
      "long form argument" : "--region",
      "short form argument" : "-rg",
      "tasks" : {
        "detect-mei" : "--region"
      }
    },
    {
      "ID" : "vcf",
      "description" : "Output MEIs.",
      "long form argument" : "--vcf",
      "short form argument" : "-v",
      "tasks" : {
        "detect-mei" : "--vcf"
      }
    }
  ],

  "instances" : [
    {
      "ID" : "default",
      "description" : "Default instance requires user to input all input filenames.",
      "nodes" : [
        {
          "ID" : "mosaik path",
          "argument" : "--mosaik-path",
          "values" : ["$(TOOL_BIN)/MOSAIK/bin"]
        }
      ]
    },

    {
      "ID" : "illumina",
      "description" : "Parameters assuming illumina sequencing of a human genome",
      "nodes" : [
        {
          "ID" : "mosaik path",
          "argument" : "--mosaik-path",
          "values" : ["$(TOOL_BIN)/MOSAIK/bin"]
        },
        {
          "ID" : "temp dir",
          "argument" : "--temp-directory",
          "values" : ["pipeline_temp"]
        },
        {
          "ID" : "directory",
          "argument" : "--tangram-directory",
          "values" : ["tangram_files"]
        },
        {
          "ID" : "merged reference",
          "argument" : "--merged-reference-fasta",
          "values" : ["merged_reference.fa"]
        },
        {
          "ID" : "hash size",
          "argument" : "--hash-size",
          "values" : [15]
        },
        {
          "ID" : "se neural net",
          "argument" : "--ann-single-end",
          "values" : ["$(RESOURCES)/tutorial/current/se.100.005.ann"]
        },
        {
          "ID" : "pe neural net",
          "argument" : "--ann-paired-end",
          "values" : ["$(RESOURCES)/tutorial/current/pe.100.01.ann"]
        },
        {
          "ID" : "bam list",
          "argument" : "--bam-list",
          "values" : ["bam_list.txt"]
        },
        {
          "ID" : "tech",
          "argument" : "--sequencing-technology",
          "values" : ["illumina"]
        }
      ]
    },

    {
      "ID" : "test",
      "description" : "Test instance for the test harness.",
      "nodes" : [
        {
          "ID" : "fasta reference",
          "argument" : "--fasta-reference",
          "values" : ["$(RESOURCES)/tutorial/current/chr20_fragment.fa"]
        },
        {
          "ID" : "moblist",
          "argument" : "--mobile-element-fasta",
          "values" : ["$(RESOURCES)/tutorial/current/mobile_element_sequences.fa"]
        },
        {
          "ID" : "merged reference",
          "argument" : "--merged-reference-fasta",
          "values" : ["chr20_fragment_moblist.fa"]
        },
        {
          "ID" : "hash size",
          "argument" : "--hash-size",
          "values" : [10]
        },
        {
          "ID" : "se neural net",
          "argument" : "--ann-single-end",
          "values" : ["$(RESOURCES)/tutorial/current/se.100.005.ann"]
        },
        {
          "ID" : "pe neural net",
          "argument" : "--ann-paired-end",
          "values" : ["$(RESOURCES)/tutorial/current/pe.100.01.ann"]
        },
        {
          "ID" : "prefix",
          "argument" : "--special-reference-prefix",
          "values" : ["moblist"]
        },
        {
          "ID" : "special hashes",
          "argument" : "--special-reference-hashes",
          "values" : [50]
        },
        {
          "ID" : "mosaik path",
          "argument" : "--mosaik-path",
          "values" : ["$(TOOL_BIN)/MOSAIK/bin"]
        },
        {
          "ID" : "fastq",
          "argument" : "--fastq",
          "values" : ["$(RESOURCES)/tutorial/current/mutated_genome_1.fq"]
        },
        {
          "ID" : "fastq2",
          "argument" : "--fastq2",
          "values" : ["$(RESOURCES)/tutorial/current/mutated_genome_2.fq"]
        },
        {
          "ID" : "tech",
          "argument" : "--sequencing-technology",
          "values" : ["illumina"]
        },
        {
          "ID" : "temp dir",
          "argument" : "--temp-directory",
          "values" : ["pipeline_temp"]
        },
        {
          "ID" : "bam list",
          "argument" : "--bam-list",
          "values" : ["bam_list.txt"]
        },
        {
          "ID" : "directory",
          "argument" : "--tangram-directory",
          "values" : ["tangram_files"]
        },
        {
          "ID" : "vcf",
          "argument" : "--vcf",
          "values" : ["tangram_mei_calls.vcf"]
        },
        {
          "ID" : "region",
          "argument" : "--region",
          "values" : [20]
        },
        {
          "ID" : "fragments",
          "argument" : "--minimum-fragments",
          "values" : [0]
        },
        {
          "ID" : "processors",
          "argument" : "--processors",
          "values" : [2]
        }
      ]
    }
  ]
}
