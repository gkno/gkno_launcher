{
  "description" : "Given a genomic region, extract a region from a BAM file and realign with glia for comparison.",
  "hide in help" : true,
  "developmental" : true,
  "categories" : ["Alignment", "Variant-graph"],

  "tasks" : {
    "generate-original" : {
      "tool" : "bamtools-merge"
    },
    "index-original" : {
      "tool" : "bamtools-index"
    },

    "graph-align" : {
      "tool" : "glia",
      "output to stream" : true
    },
    "sort" : {
      "tool" : "bamtools-sort"
    },
    "index-realigned" : {
      "tool" : "bamtools-index"
    }
  },

  "nodes" : [
    {
      "ID" : "bam",
      "description" : "The input BAM file.",
      "long form argument" : "--in",
      "short form argument" : "-i",
      "tasks" : {
        "generate-original" : "--in"
      }
    },
    {
      "ID" : "region",
      "description" : "The genomic region for consideration.",
      "long form argument" : "--region",
      "short form argument" : "-rg",
      "required" : true,
      "tasks" : {
        "generate-original" : "--region",
        "graph-align" : "--region"
      }
    },
    {
      "ID" : "index",
      "description" : "The regional slice of the original BAM file.",
      "long form argument" : "--out-original",
      "short form argument" : "-oo",
      "tasks" : {
        "generate-original" : "--out",
        "graph-align" : "--in",
        "index-original" : "--in"
      }
    },
    {
      "ID" : "fasta",
      "description" : "The FASTA reference genome.",
      "long form argument" : "--fasta-reference",
      "short form argument" : "-r",
      "tasks" : {
        "graph-align" : "--fasta-reference"
      }
    },
    {
      "ID" : "realign",
      "description" : "Realign the BAM stream on stdin to the VCF file, adjusting position and flattening alignments back into the reference space where realignment to the graph provides better quality.",
      "long form argument" : "--realign-bam",
      "short form argument" : "-rb",
      "tasks" : {
        "graph-align" : "--realign-bam"
      }
    },
    {
      "ID" : "reverse",
      "description" : "Report the reverse complement if it provides a better alignment.",
      "long form argument" : "--reverse-complement",
      "short form argument" : "-rc",
      "tasks" : {
        "graph-align" : "--reverse-complement"
      }
    },
    {
      "ID" : "unsorted",
      "description" : "Do not attempt streaming sort of alignments.  This can save memory in high coverage areas, but will require sort of BAM file before it can be used for variant calling.",
      "long form argument" : "--unsorted-output",
      "short form argument" : "-u",
      "tasks" : {
        "graph-align" : "--unsorted-output"
      }
    },
    {
      "ID" : "window",
      "description" : "Number of bp of window to assemble from VCF for realignment.",
      "long form argument" : "--realignment-window",
      "short form argument" : "-rw",
      "tasks" : {
        "graph-align" : "--realignment-window"
      }
    },
    {
      "ID" : "softclip threshold",
      "description" : "If sum of qualities of soft clipped bases is >= N, realign (default ~inf).",
      "long form argument" : "--soft-clip-qsum-threshold",
      "short form argument" : "-s",
      "tasks" : {
        "graph-align" : "--soft-clip-qsum-threshold"
      }
    },
    {
      "ID" : "mismatch threshold",
      "description" : "If sum of qualities of mismatched bases is >= N, realign (default ~inf).",
      "long form argument" : "--mismatch-qsum-threshold",
      "short form argument" : "-mqt",
      "tasks" : {
        "graph-align" : "--mismatch-qsum-threshold"
      }
    },
    {
      "ID" : "gap count",
      "description" : "Accept realignment if number of gaps is < N.",
      "long form argument" : "--gap-count-max",
      "short form argument" : "-gcm",
      "tasks" : {
        "graph-align" : "--gap-count-max"
      }
    },
    {
      "ID" : "vcf",
      "description" : "The genome DAG, BGZIP'ed (.vcf.gz) and tabix-indexed (.tbi).",
      "long form argument" : "--vcf",
      "short form argument" : "-v",
      "tasks" : {
        "graph-align" : "--vcf"
      }
    },
    {
      "ID" : "sort",
      "description" : "Pass realigned reads to Freebayes",
      "tasks" : {
        "graph-align" : "--out",
        "sort" : "--in"
      }
    },
    {
      "ID" : "output",
      "long form argument" : "--out-realigned",
      "short form argument" : "-or",
      "description" : "The realigned BAM file.",
      "tasks" : {
        "sort" : "--out",
        "index-realigned" : "--in"
      }
    }
  ],

  "parameter sets" : [
    {
      "ID" : "default",
      "description" : "The default instance sets all the parameters for the pipeline to run.",
      "nodes" : [
        {
          "ID" : "realign",
          "argument" : "--realign-bam",
          "values" : ["set"]
        },
        {
          "ID" : "reverse complement",
          "argument" : "--reverse-complement",
          "values" : ["set"]
        },
        {
          "ID" : "unsorted output",
          "argument" : "--unsorted-output",
          "values" : ["set"]
        },
        {
          "ID" : "window",
          "argument" : "--realignment-window",
          "values" : [1500]
        },
        {
          "ID" : "soft-clip",
          "argument" : "--soft-clip-qsum-threshold",
          "values" : [200]
        },
        {
          "ID" : "mismatch",
          "argument" : "--mismatch-qsum-threshold",
          "values" : [200]
        },
        {
          "ID" : "gap",
          "argument" : "--gap-count-max",
          "values" : [4]
        }
      ]
    },

    {
      "ID" : "human",
      "description" : "Parameter set for the human genome.",
      "nodes" : [
        {
          "ID" : "reference",
          "argument" : "--fasta-reference",
          "values" : ["$(RESOURCES)/homo_sapiens/current/human_reference_v37_decoys.fa"]
        }
      ]
    }
  ]
}
