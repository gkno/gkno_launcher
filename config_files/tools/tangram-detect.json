{
  "id" : "tangram-detect",
  "description" : "Detect and genotype structural variation events.",
  "category" : "variant discovery",
  "tools" : ["tangram"],
  "path" : "Tangram/bin",
  "executable" : "tangram_detect",
  "help" : "--help|-h",
  "help group" : "SV discovery",
  "arguments" : {
    "inputs" : [
      {
        "description" : "Library information file (generated by tangram-scan).",
        "long form argument" : "--library-file",
        "short form argument" : "-l",
        "command line argument" : "-lb",
        "required" : true,
        "data type" : "string",
        "extensions" : [".dat"]
      },
      {
        "description" : "Fragment length distribution histogram file (generated by tangram-scan).",
        "long form argument" : "--histogram-file",
        "short form argument" : "-ht",
        "command line argument" : "-ht",
        "required" : true,
        "data type" : "string",
        "extensions" : [".dat"]
      },
      {
        "description" : "The list of input BAM files.",
        "long form argument" : "--in-list",
        "short form argument" : "-il",
        "command line argument" : "-in",
        "required" : true,
        "data type" : "string",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Tangram reference sequence file.",
        "long form argument" : "--tangram-reference",
        "short form argument" : "-r",
        "command line argument" : "-ref",
        "data type" : "string",
        "extensions" : [".dat"]
      }
    ],

    "outputs" : [
      {
        "description" : "The output file (including path) [stdout].",
        "long form argument" : "--vcf",
        "short form argument" : "-v",
        "command line argument" : "-out",
        "required" : true,
        "data type" : "string",
        "extensions" : [".vcf"],
        "construct filename" : {
          "method": "define name",
          "filename" : "tangram_calls",
          "for multiple runs connect to" : "--in-list",
          "add extension" : true
        }
      }
    ],

    "options" : [
      {
        "description" : "Genomic region.",
        "long form argument" : "--region",
        "short form argument" : "-rg",
        "command line argument" : "-rg",
        "required" : true,
        "data type" : "string",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Check for invalid libraries.",
        "long form argument" : "--check-libraries",
        "short form argument" : "-c",
        "command line argument" : "-cl",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum cluster size [2].",
        "long form argument" : "--minimum-cluster-size",
        "short form argument" : "-mc",
        "command line argument" : "-mcs",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum event length [100].",
        "long form argument" : "--minimum-length",
        "short form argument" : "-ml",
        "command line argument" : "-mel",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum mapping quality for pairs (special pairs excepted) [20].",
        "long form argument" : "--mapping-quality",
        "short form argument" : "-mq",
        "command line argument" : "-mq",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum mapping quality for special pairs [20].",
        "long form argument" : "--special-pair-quality",
        "short form argument" : "-sq",
        "command line argument" : "-smq",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Which SV types to detect. 1 - DELETION, 2 - TANDEM DUP, 4 - INVERSION, 8 - MEI. For multiple event classes, input the sum of the preceding values [8 - ALL TYPES]",
        "long form argument" : "--detection-type",
        "short form argument" : "-d",
        "command line argument" : "-dt",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum score rate for split read alignments [0.8]",
        "long form argument" : "--minimum-score-rate",
        "short form argument" : "-ms",
        "command line argument" : "-msr",
        "data type" : "float",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Genotype SV events?",
        "long form argument" : "--genotype",
        "short form argument" : "-g",
        "command line argument" : "-gt",
        "data type" : "flag",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Binominal distribution parameters for the three possible genotypes (RR, RA and AA) [0.001, 0.5, 0.999].",
        "long form argument" : "--binomial-parameters",
        "short form argument" : "-bp",
        "command line argument" : "-bp",
        "data type" : "string",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum number of supporting read-pair fragments for genotyping [2].",
        "long form argument" : "--supporting-read-pairs",
        "short form argument" : "-sr",
        "command line argument" : "-rpf",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum number of supporting split-read fragments for genotyping [5].",
        "long form argument" : "--supporting-split-reads",
        "short form argument" : "-ss",
        "command line argument" : "-srf",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Minimum jumping (BAM index jump) length for genotyping. Set to 0 to turn off jumping. [500000]",
        "long form argument" : "--minimum-jumping-length",
        "short form argument" : "-mj",
        "command line argument" : "-mjl",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Number of threads [1].",
        "long form argument" : "--processors",
        "short form argument" : "-p",
        "command line argument" : "-p",
        "data type" : "integer",
        "extensions" : ["no extension"]
      }
    ]
  },

  "instances" : [
    {
      "ID" : "default",
      "description" : "Default instance requires the users input for all files.",
      "nodes" : [
        {
          "ID" : "genotype",
          "argument" : "--genotype",
          "values" : ["set"]
        },
        {
          "ID" : "library",
          "argument" : "--library-file",
          "values" : ["tangram-files/library.dat"]
        },
        {
          "ID" : "histogram",
          "argument" : "--histogram-file",
          "values" : ["tangram-files/histogram.dat"]
        },
        {
          "ID" : "reference",
          "argument" : "--tangram-reference",
          "values" : ["tangram-reference.dat"]
        }
      ]
    },

    {
      "ID" : "test",
      "description" : "Instance for use with the test-harness.",
      "nodes" : [
        {
          "ID" : "list",
          "values" : ["$(RESOURCES)/tutorial/current/tangram-bam-list.txt"],
          "argument" : "--in-list"
        },
        {
          "ID" : "genotype",
          "argument" : "--genotype",
          "values" : ["set"]
        },
        {
          "ID" : "library",
          "argument" : "--library-file",
          "values" : ["$(RESOURCES)/tutorial/current/tangram-files/lib_table.dat"]
        },
        {
          "ID" : "histogram",
          "argument" : "--histogram-file",
          "values" : ["$(RESOURCES)/tutorial/current/tangram-files/hist.dat"]
        },
        {
          "ID" : "reference",
          "argument" : "--tangram-reference",
          "values" : ["$(RESOURCES)/tutorial/current/tangram-reference.dat"]
        },
        {
          "ID" : "region",
          "argument" : "--region",
          "values" : ["20"]
        }
      ]
    }
  ]
}
