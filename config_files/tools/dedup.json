{
  "id" : "dedup",
  "description" : "Mark duplicate reads in a BAM file (University of Michigan).",
  "categories" : ["BAM-processing", "Michigan-software"],
  "tools" : ["bamUtil", "libStatGen"],
  "path" : "bamUtil/bin",
  "executable" : "bam",
  "modifier" : "dedup",
  "help" : "--help|-h",
  "arguments" : {
    "inputs" : [
      {
        "description" : "Input BAM file name (must be sorted).",
        "long form argument" : "--in",
        "short form argument" : "-i",
        "command line argument" : "--in",
        "required" : true,
        "data type" : "string",
        "extensions" : [".bam"]
      }
    ],

    "outputs" : [
      {
        "description" : "Output BAM file name (same order with original file).",
        "long form argument" : "--out",
        "short form argument" : "-o",
        "command line argument" : "--out",
        "required" : true,
        "data type" : "string",
        "extensions" : [".bam"],
        "construct filename" : {
          "method": "from tool argument",
          "use argument" : "--in",
          "modify extension" : "replace",
          "modify text" : [
            {
              "add text" : ["_dupmarked"]
            }
          ]
        }
      }
    ],

    "options" : [
      {
        "description" : "Only add scores over this phred quality when determining a read's quality (default: 15)",
        "long form argument" : "--min-qual",
        "short form argument" : "-m",
        "command line argument" : "--minQual",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Log and summary statistics (default: [outfile].log, or stderr if --out starts with '-').",
        "long form argument" : "--log",
        "short form argument" : "-l",
        "command line argument" : "--log",
        "data type" : "string",
        "extensions" : [".log"]
      },
      {
        "description" : "Treat reads with mates on different chromosomes as single-ended.",
        "long form argument" : "--one-chromosome",
        "short form argument" : "-oc",
        "command line argument" : "--oneChrom",
        "data type" : "flag",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Remove duplicates (default is to mark duplicates).",
        "long form argument" : "--remove-duplicates",
        "short form argument" : "-rd",
        "command line argument" : "--rmDups",
        "data type" : "flag",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Allow an already mark-duplicated BAM file, unmarking any previously marked duplicates and apply this duplicate marking logic.  Default is to throw errors and exit when trying to run on an already mark-duplicated BAM.",
        "long form argument" : "--force",
        "short form argument" : "-f",
        "command line argument" : "--force",
        "data type" : "flag",
        "extensions" : ["no extension"]
      },
      {
        "description" : "Do not expect an EOF block on a bam file.",
        "long form argument" : "--no-eof",
        "short form argument" : "-n",
        "command line argument" : "--noeof",
        "data type" : "flag",
        "extensions" : ["no extension"]
      }
    ]
  },

  "parameter sets" : [
    {
      "ID" : "default",
      "description" : "Default parameter set requires the users input for all files.",
      "nodes" : [
      ]
    },

    {
      "ID" : "test",
      "description" : "Parameter set for use with the test-harness.",
      "nodes" : [
        {
          "ID" : "bam",
          "argument" : "--in",
          "values" : ["$(RESOURCES)/tutorial/current/mutated_genome.bam"]
        },
        {
          "ID" : "output path",
          "values" : ["./"],
          "argument" : "--output-path"
        }
      ]
    }
  ]
}
