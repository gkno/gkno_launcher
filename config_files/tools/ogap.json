{
  "id" : "ogap",
  "description" : "Realigns alignments optimized to open gaps in low-entropy sequence.",
  "category" : "alignment processing",
  "tools" : ["ogap"],
  "path" : "ogap",
  "executable" : "ogap",
  "help" : "--help|-h",
  "help group" : "BAM processing",
  "hide tool" : true,
  "input is stream" : true,
  "arguments" : {
    "inputs" : [
      {    
        "description" : "The input BAM file.",
        "long form argument" : "--bam",
        "short form argument" : "-b",
        "command line argument" : "--in",
        "required" : true,
        "extensions" : [".bam"],
        "data type" : "string",
        "if input is stream" : "do not include",
        "is stream" : true,
        "hide in help" : true
      },
      {    
        "description" : "FASTA reference file to use for realignment (required)",
        "long form argument" : "--fasta-reference",
        "short form argument" : "-r",
        "command line argument" : "--fasta-reference",
        "required" : true,
        "extensions" : [".fa", ".fasta"],
        "data type" : "string"
      }
    ],

    "outputs" : [
      {    
        "description" : "The output BAM file.",
        "long form argument" : "--out",
        "short form argument" : "-o",
        "command line argument" : "--out",
        "required" : true,
        "extensions" : [".bam"],
        "data type" : "string",
        "if output to stream" : "do not include",
        "modify argument name on command line" : "stdout",
        "hide in help" : true,
        "construct filename" : {
          "method": "from tool argument",
          "use argument" : "--bam",
          "modify extension" : "append",
          "modify text" : [
            {
              "add text" : ["_gap-extended"]
            }
          ]
        }
      }
    ],

    "options" : [
      {    
        "description" : "The number of bases on the left and right to attempt to align to (default 50bp).  This limits the maximum detectable indel length.",
        "long form argument" : "--flanking-window",
        "short form argument" : "-w",
        "command line argument" : "--flanking-window",
        "extensions" : ["no extension"],
        "data type" : "integer"
      },
      {    
        "description" : "Trigger realignment if the sum of quality scores of mismatched bases is >= N",
        "long form argument" : "--mismatch-qsum",
        "short form argument" : "-mq",
        "command line argument" : "--mismatch-qsum",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {    
        "description" : "Trigger realignment if the sum of quality scores of soft clipped bases is >= N",
        "long form argument" : "--soft-clip-qsum",
        "short form argument" : "-sq",
        "command line argument" : "--soft-clip-qsum",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {    
        "description" : "Only accept realignments if they have <= N soft clips",
        "long form argument" : "--soft-clip-limit",
        "short form argument" : "-sl",
        "command line argument" : "--soft-clip-limit",
        "data type" : "integer",
        "extensions" : ["no extension"]
      },
      {    
        "description" : "use entropy scaling for the gap open penalty",
        "long form argument" : "--entropy-gap-open",
        "short form argument" : "-e",
        "command line argument" : "--entropy-gap-open",
        "data type" : "flag",
        "extensions" : ["no extension"]
      },
      {    
        "description" : "penalize non-repeat-unit gaps in repeat sequence (default 15.0, set to 0 to disable)",
        "long form argument" : "--repeat-gap-extend",
        "short form argument" : "-re",
        "command line argument" : "--repeat-gap-extend",
        "data type" : "integer",
        "extensions" : ["no extension"]
      }
    ]
  },

  "instances" : [
    {
      "ID" : "default",
      "description" : "Default instance requires the users input for all files.",
      "nodes" : [
        {
          "ID" : "qsum",
          "argument" : "--mismatch-qsum",
          "values" : ["20"]
        },
        {
          "ID" : "soft clip",
          "argument" : "--soft-clip-qsum",
          "values" : ["20"]
        },
        {
          "ID" : "soft clip limit",
          "argument" : "--soft-clip-limit",
          "values" : ["0"]
        },
        {
          "ID" : "entropy",
          "argument" : "--entropy-gap-open",
          "values" : ["set"]
        },
        {
          "ID" : "repeat",
          "argument" : "--repeat-gap-extend",
          "values" : ["25"]
        }
      ]
    },

    {
      "ID" : "test",
      "description" : "Instance for use with the test-harness.",
      "nodes" : [
        {
          "ID" : "BAM1",
          "argument" : "--bam",
          "values" : ["$(RESOURCES)/tutorial/current/mutated_genome.bam"]
        },
        {
          "ID" : "reference",
          "argument" : "--fasta-reference",
          "values" : ["$(RESOURCES)/tutorial/current/chr20_fragment.fa"]
        },
        {
          "ID" : "qsum",
          "argument" : "--mismatch-qsum",
          "values" : ["20"]
        },
        {
          "ID" : "soft clip",
          "argument" : "--soft-clip-qsum",
          "values" : ["20"]
        },
        {
          "ID" : "soft clip limit",
          "argument" : "--soft-clip-limit",
          "values" : ["0"]
        },
        {
          "ID" : "entropy",
          "argument" : "--entropy-gap-open",
          "values" : ["set"]
        },
        {
          "ID" : "repeat",
          "argument" : "--repeat-gap-extend",
          "values" : ["25"]
        }
      ]
    }
  ]
}
